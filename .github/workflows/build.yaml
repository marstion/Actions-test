name: build

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        # 设置交叉编译的目标平台和架构
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Cache Go modules
      uses: actions/cache@v2
      with:
        path: ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

#    - name: Get project dependencies
#      run: go mod tidy

    - name: Build
      run: |
        export _NAME="test_${{ matrix.goos }}_${{ matrix.goarch }}"
        if [ "${{ matrix.goos }}" == "windows" ]; then
          export _NAME="${_NAME}.exe"
        fi
        GO111MODULE=off GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o ./releases/${_NAME}

    - name: Upload release binaries
      uses: softprops/action-gh-release@v1
      with:
        files: releases/*   # 上传所有交叉编译的文件

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get tag name
        id: get_tag
        run: echo "::set-output name=tag::$(echo ${GITHUB_REF} | sed 's/refs\/tags\///')"

      - name: Create Release
        uses: gh-cli/gh-release-action@v1
        with:
          tag: ${{ steps.get_tag.outputs.tag }}
          release-name: Release ${{ steps.get_tag.outputs.tag }}
          body: |
            ### 新版本 ${{ steps.get_tag.outputs.tag }} 发布
            - 测试发布功能
